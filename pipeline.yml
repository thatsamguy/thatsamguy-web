jobs:
- name: pipeline
  plan:
  - get: thatsamguy-web
    trigger: true
  - file: thatsamguy-web/pipeline.yml
    set_pipeline: thatsamguy-web
- name: build
  on_error:
    params:
      channel: '#build'
      icon_url: https://concourse-ci.org/images/trademarks/concourse-black.png
      silent: true
      text: |
        :boom: A build of $BUILD_PIPELINE_NAME errored. Check it out <((ci-url))/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME|here>.
      username: concourse
    put: notify
  on_failure:
    params:
      channel: '#build'
      icon_url: https://concourse-ci.org/images/trademarks/concourse-black.png
      silent: true
      text: |
        :boom: A build of $BUILD_PIPELINE_NAME failed. Check it out <((ci-url))/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME|here>.
      username: concourse
    put: notify
  on_success:
    params:
      channel: '#build'
      icon_url: https://concourse-ci.org/images/trademarks/concourse-black.png
      silent: true
      text: |
        :airplane_departure: A new build of $BUILD_PIPELINE_NAME deployed! Check it out <((ci-url))/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME|here>.
      username: concourse
    put: notify
  plan:
  - get: thatsamguy-web
    passed:
    - pipeline
    trigger: true
  - config:
      image_resource:
        source:
          repository: fedora
          tag: "31"
        type: registry-image
      inputs:
      - name: thatsamguy-web
      outputs:
      - name: public
        path: public/
      platform: linux
      run:
        args:
        - -euxc
        - dnf install -y zola && cd thatsamguy-web/website && zola build && cp -vr
          public/* ../../public/
        path: bash
    task: build
  - put: deploy
resource_types:
- name: s3-sync
  source:
    repository: firespring/concourse-s3-sync-resource
  type: docker-image
- name: slack-notification
  source:
    repository: cfcommunity/slack-notification-resource
  type: docker-image
resources:
- icon: github
  name: thatsamguy-web
  source:
    branch: main
    password: ((github-password))
    uri: git@github.com:thatsamguy/thatsamguy-web.git
    username: ((github-username))
    private_key: ((github-private-key))
  type: git
- name: deploy
  source:
    access_key_id: ((aws-access-key-id))
    bucket: aws-website-thatsamguy-00trx
    directory: public/
    options:
    - --exclude '.git*'
    - --exclude 'wu/*'
    region: us-east-1
    secret_access_key: ((aws-secret-access-key))
  type: s3-sync
- icon: slack
  name: notify
  source:
    url: ((slack-webhook))
  type: slack-notification
